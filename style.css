/* ------------------ */
/* FONTS */
/* ------------------ */

@font-face {
  font-family: "Cooper";
  src: url("/fonts//Cooper.ttf") format("truetype");
  font-weight: 400 900;
  font-style: normal;
}

/* ------------------ */
/* ALGEMENE REGELS */
/* ------------------ */

h1 {
  font-family: "Cooper", sans-serif;
  font-size: clamp(2.5rem, 9vw, 4rem);
  transform-style: preserve-3d;
  /* animation: rotateHeading 4s infinite; */
  animation-play-state: running;
  transform: translate3d(0, 0, 0) rotateX(var(--Xrotation)) rotateY(var(--Yrotation));
}

/* @keyframes rotateHeading {
  0%, 100% {
    --Xrotation: 0deg;
    --Yrotation: 0deg;
  }

  10% {
    --Xrotation: 35deg;
    --Yrotation: 10deg;
  }

  50% {
    --Xrotation: 45deg;
    --Yrotation: 60deg;
  }

  90% {
    --Xrotation: 10deg;
    --Yrotation: -15deg;
  }
  
} */

h1, p{
  font-weight:  var(--font-weight-variable);
  filter: blur(var(--textBlur));
  opacity: var(--headingOpacity);
  animation: fontVariation 8s infinite alternate;
  animation-play-state: paused;
}

body {
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-image: -webkit-radial-gradient(
    50% 50%,
    ellipse cover,
    transparent,
    rgba(0, 0, 0, 0.465)
  );
  background-color: rgb(58, 58, 58);
}

svg {
  fill: #231f20;
  stroke-width: 0px;
  scale: 0.6;
}

p{
  font-family: 'cooper', sans-serif;
  font-weight: 600;
}

/* ------------------ */
/* @PROPERTY */
/* ------------------ */

@property --font-weight-variable {
  syntax: "<number>";
  inherits: true;
  initial-value: 300;
}

@property --pressure-color {
  syntax: "<color>";
  inherits: true;
  initial-value: lime;
  /* initial value lime om te testen of 
  hij werkt en goed overschreven wordt */
}

@property --degrees-shine {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}

@property --cd-dark-color {
  syntax: "<color>";
  inherits: true;
  initial-value: gray;
}

@property --cd-light-color {
  syntax: "<color>";
  inherits: true;
  initial-value: silver;
}

@property --cd-start-shine {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 35%;
}
@property --cd-end-shine {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 65%;
}

@property --record-status {
  syntax: "<color>";
  inherits: true;
  initial-value: #d2d2d2b5;
}

@property --record_blur_switch {
  syntax: "<length>";
  inherits: true;
  initial-value: 1px;
}
@property --record_blur_status {
  syntax: "<length>";
  inherits: true;
  initial-value: 40px;
}

@property --textBlur {
  syntax: "<length>";
  inherits: true;
  initial-value: 0px;
}

@property --headingOpacity {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

/* @property --Yrotation {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}

@property --Xrotation {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
} */


/* ------------------ */
/* @KEYFRAMES */
/* ------------------ */

@keyframes fontVariation {
  from {
    --font-weight-variable: 300;
    --headingOpacity: 0;
    --textBlur: 14px;
  }

  to {
    --font-weight-variable: 700;
    --textBlur: 0px;
    --headingOpacity: 1;
  }
}

@keyframes record_blink {
  0%, 100% {
    --record_blur_switch: 1px;
    --record_blur_status: 40px;
  } 50% {
    --record_blur_switch: 50px;
    --record_blur_status: 60px;
  }
}

@keyframes degrees-shine {
  0% {
    --degrees-shine: 0deg;
  }

  100% {
    --degrees-shine: 360deg;
  }
}



/* -------------------------------------------------- */
/* 3 Main buttons check state + style connection */
/* -------------------------------------------------- */

html:has([value="stop"]:checked) {
  --pressureStop: true;
}

html:has([value="record"]:checked) {
  --pressureRecord: true;
  --recordingStatus: true;
}

html:has([value="play"]:checked) {
  --pressurePlay: true;
}


/* -------------------------------- */
/* DESKTOP CODE + Herbruikbare code */
/* -------------------------------- */

/* OPZET VOOR CONTROLPANEEL */
body > section {
  width: 400px;
  height: 650px;
  border: black solid 4px;
  background-color: rgb(161, 161, 161);
  background: linear-gradient(180deg, #0000008a, #000000ab),
    url(./images/brushed_texture.png);
}

/* / 1E SECTIE VAN CONTROLAPNEEL */
section > section:first-child {
  display: grid;
  grid-template-rows: 80px 1fr;
  height: 70%;
  grid-template-columns: 1fr 3fr 1fr;
}

/* / 2E SECTIE VAN CONTROLAPNEEL */
section > section:last-child {
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  height: 30%;
}

section > section:last-child input[type="radio"] {
  visibility: hidden;
  position: absolute;
}





/* principe animatie samen bedacht met Roel,
later Sanne geholpen om de fadeout animatie te laten werken. 
We hebben de code in principe 'versimpeld' en transiton gebruikt.
transition all geeft een transition op alle gewenste elementen
en daarnaast ook de custom propertie transitionen met 0.2s --pressure-color */

/* section section:nth-of-type(2) label:has(input[type="radio"]) { */
label:has([value="stop"]),
label:has([value="play"]),
label:has([value="record"]) {
  --pressure-color: rgb(139, 139, 139);
  background: var(--pressure-color);
  height: 100px;
  background: linear-gradient(to bottom, #65656525, var(--pressure-color)),
    url(./images/brushed_texture.png);
  background-size: 100%;
  background-position: top;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transform: translateZ(150px) translatex(0) translateY(0) rotatex(3deg)
    rotatey(0deg) rotateZ(0deg);
  box-shadow: 0 0 20px rgb(0 0 0 / 9%), 0 2px 2px 1px rgb(0 0 0 / 18%);
  transition: all 0.2s, --pressure-color 0.2s;

  /* &:checked {
    transform: translateZ(0px) rotatez(0deg);
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.5), 0 0 0 0 transparent;
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);
  } */
}



body section section div {
   animation: degrees-shine 8s infinite forwards linear;
   animation-play-state: paused;
   position: relative;
}
/* deze default state is nodig - hoog in de scope. 
ik had deze in de style query omgeving, 
maar daardoor gaat de playstate moeilijk doen! */

@container style(--pressureStop:true) {
  label:has([value="stop"]) {
    transform: translateZ(0px) rotatez(0deg);
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);
  }

  body section section > div {
    animation-play-state: paused;
  }
  
}

@container style(--recordingStatus:true){
  section section > div{
    --record-status: red;
  }
}

section section > div::after{
  outline: var(--record-status) 4px dotted;
  
}


@container style(--pressureRecord:true) {
  h1, p {
    animation-play-state: running;
    animation: fontVariation 8s infinite alternate;
  }

  h1{
    opacity: var(--headingOpacity);
  }

  label:has([value="record"]) {
    transform: translateZ(0px) rotatez(0deg);
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);

    &::after{
      content: "";
      position: absolute;
      /* background-color: red; */
      background: linear-gradient(175deg, #aaaaaa1f 10%, transparent 100%);
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
    }

   
  }

  label:has([value="record"]) svg{
    --record-status: red;
    fill: var(--record-status);
    filter: blur(1px);
    box-shadow: 0 0 var(--record_blur_switch) rgb(255, 0, 0);
    animation: record_blink 2s cubic-bezier(0.075, 0.82, 0.165, 1) infinite;
    animation-delay: 2s;
    border-radius: 50%;
  }

  section section div div {
    animation-play-state: running;
  }

  section section > div{
    box-shadow: 0 0 var(--record_blur_status) #f008;
    animation: record_blink 1s infinite;
  }
  
  label:has([value="play"]) {
    transform: translateZ(0px) rotatez(0deg);
    box-shadow: 0 0 5px rgb(0 0 0 / 27%), 0 0 0 0 transparent;
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);

    &::after{
      content: "";
      position: absolute;
      /* background-color: red; */
      background: linear-gradient(175deg, #aaaaaa1f 10%, transparent 100%);
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
    }
  }

  body section section > div {
    /* animation: spin 14s linear infinite; */
    /* animation-play-state: running; */
    animation: degrees-shine 8s infinite forwards linear;
    /* rotate: var(--degrees-shine); */
  }
}





@container style(--pressurePlay:true) {

   section section div div {
    animation-play-state: running;
  }

  h1, p {
    animation: fontVariation 8s infinite alternate ;
    animation-play-state: running;
  }

  h1{
    opacity: var(--headingOpacity);
  }

  label:has([value="play"]) {
    transform: translateZ(0px) rotatez(0deg);
    /* box-shadow: 0 0 30px rgba(0, 0, 0, 0.5), 0 0 0 0 transparent; */
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);

    &::after{
      content: "";
      position: absolute;
      /* background-color: red; */
      background: linear-gradient(175deg, #aaaaaa1f 10%, transparent 100%);
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
    }
  }

  body section section > div {
    animation-play-state: running;
    /* animation: spin 14s linear infinite; */
    /* animation-play-state: running; */
    /* animation: degrees-shine 8s infinite forwards linear; */
    /* rotate: var(--degrees-shine); */
  }
}


body section section > div {
  /* border: silver 4px solid; */
  grid-area: 2 / 2;
  /* aspect-ratio: 1; */
  outline-offset: -4px;
  outline: var(--record-status) 4px dotted;
  height: 250px;
  width: 250px;
  border-radius: 100%;
  /* box-shadow: 0 0 40px #f008; */


  background-image: linear-gradient(
      var(--degrees-shine),
      rgba(180, 180, 180, 0)
       40%,
      rgba(255, 255, 255, 0.236) 50%,
      rgba(180, 180, 180, 0) 60%
    ), 
    url('data:image/svg+xml, <svg id="cd_custom_overlay_filter" width="250" height="250" viewBox="0 0 250 250" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="125.636" cy="125.636" r="20.6396" stroke="white" stroke-width="2"/><circle cx="125.636" cy="125.636" r="9.88928" fill="white" fill-opacity="0.17" stroke="white" stroke-width="2"/><circle cx="125.636" cy="125.636" r="30.7968" stroke="white" stroke-opacity="0.8" stroke-width="1.5"/><circle cx="125.636" cy="125.636" r="44.1902" stroke="white" stroke-opacity="0.6" stroke-width="1.25"/><circle cx="125.637" cy="125.636" r="56.3088" stroke="white" stroke-opacity="0.5" stroke-width="1.15"/><circle cx="125.637" cy="125.636" r="69.1434" stroke="white" stroke-opacity="0.4" stroke-width="1.1"/><circle cx="125.637" cy="125.636" r="78.7051" stroke="white" stroke-opacity="0.3" stroke-width="1.05"/><circle cx="125.636" cy="125.636" r="90.7545" stroke="white" stroke-opacity="0.2"/><circle cx="125.637" cy="125.636" r="103.608" stroke="white" stroke-opacity="0.13"/><circle cx="125.636" cy="125.636" r="116.047" stroke="white" stroke-opacity="0.07"/></svg>')
     ,
    radial-gradient(
      circle at 50% 50%,
      rgba(255, 255, 255, 0) 0%,
      rgba(101, 101, 101, 0) 3%,
      rgba(0, 0, 0, 1) 5%,
      rgba(59, 59, 59, 1) 93%,
      rgba(0, 0, 0, 1) 94%,
      rgba(238, 130, 238, 0) 100%
    );
}

section section div div:first-of-type {
    height: 150px;
    width: 100px;
    transform-origin: center right;
    rotate: var(--degrees-shine);
    /* animation: degrees-shine 8s infinite forwards linear; */
    position: absolute;
    top: 20.5%;
    left: 10%;
    display: flex;
    align-items: center;
}

section section div div:last-of-type {
  height: 150px;
    width: 100px;
    transform-origin: center left;
    rotate: var(--degrees-shine);
    /* animation: degrees-shine 8s infinite forwards linear; */
    position: absolute;
    top: 20.5%;
    right: 10%;
    display: flex;
    align-items: center;
    justify-content: end;
}





/* ------------------------ */
/* RESPONSIVE Media Queries */
/* ------------------------ */

@media screen and (max-width: 580px) {
  body > section {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 85%;
    gap: 1rem;
    height: fit-content;
    /* padding: 1rem; */
  }

  section > section:first-child {
    display: flex;
    height: 100%;
    align-items: center;
    padding-left: 5vw;
  }

  section > section:last-child {
    display: grid;
    grid-template-rows: 1fr 1fr 1fr;
    grid-template-columns: 1fr;
    height: 100%;
    width: fit-content;
  }

  label:has([value="stop"]), label:has([value="play"]), label:has([value="record"]) {
      height: 100px;
      background: linear-gradient(to right, #65656596, var(--pressure-color)), url(./images/brushed_texture.png);
      background-size: 100%;
      background-position: top;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      transform-style: preserve-3d;
      transform: translateZ(150px) translatex(0) translateY(0) rotatex(0deg) rotatey(0deg) rotateZ(0deg);
      box-shadow: 0 0 20px rgb(0 0 0 / 9%), 0 2px 2px 1px rgb(0 0 0 / 18%);
      transition: all 0.2s, --pressure-color 0.2s;
  
  }

  h1{
    font-size: 10vw;
  }

  svg{
    scale: 0.45;
  }
}



@media screen and (max-width: 480px) {
  label:has([value="stop"]), label:has([value="play"]), label:has([value="record"]) {
    height: 100px;
    background: linear-gradient(to bottom, #65656596, var(--pressure-color)), url(./images/brushed_texture.png);
    background-size: 100%;
    background-position: top;
    width: 100%;
    height: 100%;
    display: flex
;
    align-items: center;
    justify-content: center;
    transform-style: preserve-3d;
    transform: translateZ(150px) translatex(0) translateY(0) rotatex(0deg) rotatey(0deg) rotateZ(0deg);
    box-shadow: 0 0 20px rgb(0 0 0 / 9%), 0 2px 2px 1px rgb(0 0 0 / 18%);
    transition: all 0.2s, --pressure-color 0.2s;
}





  section > section:last-child {
    width: 100%;
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: 1fr 1fr 1fr;
    height: 100%;
}

section > section:first-child {
  display: flex;
  height: 100%;
  align-items: center;
  padding-left: 0;  
}

body > section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  width: 85%;
  gap: 4rem;
  height: fit-content;
  padding-top: 3rem;
}

h1{
  font-size: 10vw;
}
}

/* ------------------------ */
/* DARK & LIGHT MODE */
/* ------------------------ */

@media (prefers-color-scheme: dark) {
  body {
    background: radial-gradient(circle, #3b3b3b, #000000);
    color: #ffffff;
  }

  body > section {
    background-color: #333333;
    border-color: #444444;
  }

  h1 {
    color: #ffffff;
  }


  section section > div {
    outline: #ffffff 4px dotted;
  }
}

@media (prefers-color-scheme: light) {
  body {
    background-color: #ffffff;
    color: #1a1a1a;
  }

  body > section {
    background: linear-gradient(180deg, #a5a5a58a, #818181ab), url(./images/brushed_texture.png);
    border-color: #cccccc;

  }

  h1 {
    color: #000000;
  }

  p {
    color: silver;
  }


  section section > div {
    outline: #000000 4px dotted;
  }
}

























/* 
@keyframes spin {
  0% {
    transform: rotate(0deg);
    --cd-dark-color: rgb(124, 123, 123);
    --cd-light-color: rgba(192, 192, 192, 0.22);
    --cd-start-shine: 35%;
    --cd-end-shine: 65%;
  }
  50% {
    --cd-light-color: rgba(227, 227, 227, 0.371);
    --cd-dark-color: rgb(117, 117, 117);
    --cd-start-shine: 45%;
    --cd-end-shine: 55%;
  }
  100% {
    transform: rotate(360deg);
    --cd-dark-color: rgb(124, 123, 123);
    --cd-light-color: rgba(192, 192, 192, 0.593);
    --cd-start-shine: 35%;
    --cd-end-shine: 65%;
  }
} */

/* section
  > section:last-child:has(input[value="record"]:checked)
  label:nth-of-type(1) {
  transform: translateZ(0px) rotatez(0deg);
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5), 0 0 0 0 transparent;
  animation: testje 1s both;
  transition: all 0.5s, --pressure-color 0.5s;

  background-size: 103%;
  --pressure-color: rgb(44, 44, 44);
} */

/* ------------------------------------- */
/* section
  > section:last-child:has(input[value="stop"]:checked)
  label:nth-of-type(2) {
  background: #979bb6;
  transition: background 1s;
  border-top: 5px rgb(120, 120, 120) solid;
  border-bottom: 2px rgb(120, 120, 120) solid;
} */

/* in background gradient --custom property toevoegen en on hover de kleur switchen. */

/* section
  > section:last-child:has(input[value="play"]:checked)
  label:nth-of-type(3) {
  background: #979bb6; */
/* background: linear-gradient(135deg, #979bb6, #f4f1f2); */
/* transition: background 1s;
  border-top: 5px rgb(120, 120, 120) solid;
  border-bottom: 2px rgb(120, 120, 120) solid;
} */

/* label:nth-of-type(1) {
  background: #f4f1f2;
  transition: background 1s;
  border-bottom: 5px rgb(120, 120, 120) solid;
} */

/* label:nth-of-type(2) {
  background: #f4f1f2; */
/* background: linear-gradient(80deg, #979bb6, #f4f1f2); */
/* transition: background 1s; */
/* border-bottom: 5px rgb(120, 120, 120) solid; */
/* / */

/* label:nth-of-type(3) { */
/* background: #f4f1f2; */
/* background: linear-gradient(80deg, #979bb6, #f4f1f2); */
/* transition: background 1s; */
/* border-bottom: 5px rgb(120, 120, 120) solid; */
/* } */

/* 
section > section:last-child {
  border: solid red 1px;
} */

/* slider scrollbased animation ofzo. */
/* styling van playing button ook net als rec ingedrukt */
