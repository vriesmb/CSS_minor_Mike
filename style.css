@font-face {
  font-family: "GeistMono";
  src: url("/fonts/GeistMono_var.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

/* @import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&family=Space+Grotesk:wght@300..700&display=swap'); */

@font-face {
  font-family: "Josefin";
  src: url("/fonts/josefin.ttf");
  
}

h1 {
  font-family: "Josefin";
  font-size: 4.5rem;
  font-weight:  var(--font-weight-variable);
  animation: fontVariation 4s linear infinite alternate;
  color: white;
}

@property --font-weight-variable {
  syntax: "<number>";
  inherits: true;
  initial-value: 300;
}

@keyframes fontVariation {
  0% {
    --font-weight-variable: 300;
  }

  100% {
    --font-weight-variable: 700;
  }
}

/* ALGEMENE REGELS */
body {
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-image: -webkit-radial-gradient(
    50% 50%,
    ellipse cover,
    transparent,
    rgba(0, 0, 0, 0.465)
  );
  background-color: rgb(58, 58, 58);
}

/* OPZET VOOR CONTROLPANEEL */
body > section {
  width: 400px;
  height: 650px;
  border: black solid 4px;
  background-color: rgb(161, 161, 161);
  background: linear-gradient(180deg, #0000008a, #000000ab),
    url(/images/brushed_texture.png);
}

/* / 1E SECTIE VAN CONTROLAPNEEL */
section > section:first-child {
  display: grid;
  grid-template-rows: 80px 1fr;
  height: 70%;
  grid-template-columns: 1fr 3fr 1fr;
}

/* / 2E SECTIE VAN CONTROLAPNEEL */
section > section:last-child {
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  height: 30%;
}

section > section:last-child input[type="radio"] {
  opacity: 0;
}

@property --pressure-color {
  syntax: "<color>";
  inherits: true;
  initial-value: lime;
}

svg {
  fill: #231f20;
  stroke-width: 0px;
  scale: 0.6;
}

/* principe animatie samen bedacht met Roel,
later Sanne geholpen om de fadeout animatie te laten werken. 
We hebben de code in principe 'versimpeld' en transiton gebruikt.
transition all geeft een transition op alle gewenste elementen
en daarnaast ook de custom propertie transitionen met 0.2s --pressure-color */

/* section section:nth-of-type(2) label:has(input[type="radio"]) { */
label:has([value="stop"]),
label:has([value="play"]),
label:has([value="record"]) {
  --pressure-color: #787878;
  background: var(--pressure-color);
  height: 100px;
  background: linear-gradient(to bottom, #65656525, var(--pressure-color)),
    url(/images/brushed_texture.png);
  background-size: 100%;
  background-position: top;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transform: translateZ(150px) translatex(0) translateY(0) rotatex(3deg)
    rotatey(0deg) rotateZ(0deg);
  box-shadow: 0 0 20px rgb(0 0 0 / 9%), 0 2px 2px 1px rgb(0 0 0 / 18%);
  transition: all 0.2s, --pressure-color 0.2s;

  /* &:checked {
    transform: translateZ(0px) rotatez(0deg);
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.5), 0 0 0 0 transparent;
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);
  } */
}

html:has([value="stop"]:checked) {
  --pressureStop: true;
}

html:has([value="record"]:checked) {
  --pressureRecord: true;
  --recordingStatus: true;
}

html:has([value="play"]:checked) {
  --pressurePlay: true;
}

body section section div {
   animation: degrees-shine 8s infinite forwards linear;
}
/* deze default state is nodig - hoog in de scope. 
ik had deze in de style query omgeving, 
maar daardoor gaat de playstate moeilijk doen! */

@container style(--pressureStop:true) {
  label:has([value="stop"]) {
    transform: translateZ(0px) rotatez(0deg);
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);
  }

  body section section div {
    animation-play-state: paused;
  }
  
}

@container style(--recordingStatus:true){
  section section div{
    --record-status: red;
  }
}

section section div::after{
  outline: var(--record-status) 4px dotted;
  
}


@container style(--pressureRecord:true) {
  label:has([value="record"]) {
    transform: translateZ(0px) rotatez(0deg);
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);

    &::after{
      content: "";
      position: absolute;
      /* background-color: red; */
      background: linear-gradient(175deg, #aaaaaa1f 10%, transparent 100%);
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
    }

   
  }

  label:has([value="record"]) svg{
    --record-status: red;
    fill: var(--record-status);
    filter: blur(1px);
    box-shadow: 0 0 26px #f008;
    border-radius: 50%;
  }

  section section div{
    box-shadow: 0 0 40px #f008;
  }
  
  label:has([value="play"]) {
    transform: translateZ(0px) rotatez(0deg);
    box-shadow: 0 0 5px rgb(0 0 0 / 27%), 0 0 0 0 transparent;
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);

    &::after{
      content: "";
      position: absolute;
      /* background-color: red; */
      background: linear-gradient(175deg, #aaaaaa1f 10%, transparent 100%);
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
    }
  }

  body section section div {
    /* animation: spin 14s linear infinite; */
    /* animation-play-state: running; */
    animation: degrees-shine 8s infinite forwards linear;
    /* rotate: var(--degrees-shine); */
  }
}



@container style(--pressurePlay:true) {
  label:has([value="play"]) {
    transform: translateZ(0px) rotatez(0deg);
    /* box-shadow: 0 0 30px rgba(0, 0, 0, 0.5), 0 0 0 0 transparent; */
    animation: testje 1s both;
    transition: all 0.5s, --pressure-color 0.5s;

    background-size: 103%;
    --pressure-color: rgb(44, 44, 44);

    &::after{
      content: "";
      position: absolute;
      /* background-color: red; */
      background: linear-gradient(175deg, #aaaaaa1f 10%, transparent 100%);
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
    }
  }

  body section section div {
    animation-play-state: running;
    /* animation: spin 14s linear infinite; */
    /* animation-play-state: running; */
    /* animation: degrees-shine 8s infinite forwards linear; */
    /* rotate: var(--degrees-shine); */
  }
}


body section section div {
  /* border: silver 4px solid; */
  grid-area: 2 / 2;
  /* aspect-ratio: 1; */
  outline-offset: -4px;
  outline: var(--record-status) 4px dotted;
  height: 250px;
  width: 250px;
  border-radius: 100%;
  /* box-shadow: 0 0 40px #f008; */


  background-image: linear-gradient(
      var(--degrees-shine),
      rgba(180, 180, 180, 0) 40%,
      rgba(255, 255, 255, 0.236) 50%,
      rgba(180, 180, 180, 0) 60%
    ), 
    url('data:image/svg+xml, <svg id="cd_custom_overlay_filter" width="250" height="250" viewBox="0 0 250 250" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="125.636" cy="125.636" r="20.6396" stroke="white" stroke-width="2"/><circle cx="125.636" cy="125.636" r="9.88928" fill="white" fill-opacity="0.17" stroke="white" stroke-width="2"/><circle cx="125.636" cy="125.636" r="30.7968" stroke="white" stroke-opacity="0.8" stroke-width="1.5"/><circle cx="125.636" cy="125.636" r="44.1902" stroke="white" stroke-opacity="0.6" stroke-width="1.25"/><circle cx="125.637" cy="125.636" r="56.3088" stroke="white" stroke-opacity="0.5" stroke-width="1.15"/><circle cx="125.637" cy="125.636" r="69.1434" stroke="white" stroke-opacity="0.4" stroke-width="1.1"/><circle cx="125.637" cy="125.636" r="78.7051" stroke="white" stroke-opacity="0.3" stroke-width="1.05"/><circle cx="125.636" cy="125.636" r="90.7545" stroke="white" stroke-opacity="0.2"/><circle cx="125.637" cy="125.636" r="103.608" stroke="white" stroke-opacity="0.13"/><circle cx="125.636" cy="125.636" r="116.047" stroke="white" stroke-opacity="0.07"/></svg>')
     ,
    radial-gradient(
      circle at 50% 50%,
      rgba(255, 255, 255, 0) 0%,
      rgba(101, 101, 101, 0) 3%,
      rgba(0, 0, 0, 1) 5%,
      rgba(59, 59, 59, 1) 93%,
      rgba(0, 0, 0, 1) 94%,
      rgba(238, 130, 238, 0) 100%
    );
}

@keyframes degrees-shine {
  0% {
    --degrees-shine: 0deg;
  }

  100% {
    --degrees-shine: 360deg;
  }
}

@property --degrees-shine {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}

@property --cd-dark-color {
  syntax: "<color>";
  inherits: true;
  initial-value: gray;
}

@property --cd-light-color {
  syntax: "<color>";
  inherits: true;
  initial-value: silver;
}

@property --cd-start-shine {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 35%;
}
@property --cd-end-shine {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 65%;
}

@property --record-status {
  syntax: "<color>";
  inherits: true;
  initial-value: #efefefb5;
}
/* 
@keyframes spin {
  0% {
    transform: rotate(0deg);
    --cd-dark-color: rgb(124, 123, 123);
    --cd-light-color: rgba(192, 192, 192, 0.22);
    --cd-start-shine: 35%;
    --cd-end-shine: 65%;
  }
  50% {
    --cd-light-color: rgba(227, 227, 227, 0.371);
    --cd-dark-color: rgb(117, 117, 117);
    --cd-start-shine: 45%;
    --cd-end-shine: 55%;
  }
  100% {
    transform: rotate(360deg);
    --cd-dark-color: rgb(124, 123, 123);
    --cd-light-color: rgba(192, 192, 192, 0.593);
    --cd-start-shine: 35%;
    --cd-end-shine: 65%;
  }
} */

/* section
  > section:last-child:has(input[value="record"]:checked)
  label:nth-of-type(1) {
  transform: translateZ(0px) rotatez(0deg);
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5), 0 0 0 0 transparent;
  animation: testje 1s both;
  transition: all 0.5s, --pressure-color 0.5s;

  background-size: 103%;
  --pressure-color: rgb(44, 44, 44);
} */

/* ------------------------------------- */
/* section
  > section:last-child:has(input[value="stop"]:checked)
  label:nth-of-type(2) {
  background: #979bb6;
  transition: background 1s;
  border-top: 5px rgb(120, 120, 120) solid;
  border-bottom: 2px rgb(120, 120, 120) solid;
} */

/* in background gradient --custom property toevoegen en on hover de kleur switchen. */

/* section
  > section:last-child:has(input[value="play"]:checked)
  label:nth-of-type(3) {
  background: #979bb6; */
/* background: linear-gradient(135deg, #979bb6, #f4f1f2); */
/* transition: background 1s;
  border-top: 5px rgb(120, 120, 120) solid;
  border-bottom: 2px rgb(120, 120, 120) solid;
} */

/* label:nth-of-type(1) {
  background: #f4f1f2;
  transition: background 1s;
  border-bottom: 5px rgb(120, 120, 120) solid;
} */

/* label:nth-of-type(2) {
  background: #f4f1f2; */
/* background: linear-gradient(80deg, #979bb6, #f4f1f2); */
/* transition: background 1s; */
/* border-bottom: 5px rgb(120, 120, 120) solid; */
/* / */

/* label:nth-of-type(3) { */
/* background: #f4f1f2; */
/* background: linear-gradient(80deg, #979bb6, #f4f1f2); */
/* transition: background 1s; */
/* border-bottom: 5px rgb(120, 120, 120) solid; */
/* } */

/* 
section > section:last-child {
  border: solid red 1px;
} */

/* slider scrollbased animation ofzo. */
/* styling van playing button ook net als rec ingedrukt */
